{"version":3,"sources":["docs/logo.svg","docs/heart.svg","docs/mark.svg","docs/note-corner.svg","components/Logo/index.tsx","components/Header/index.tsx","components/Icon/index.tsx","components/Footer/index.tsx","components/Section/index.tsx","components/Container/index.tsx","components/SkillTree/index.tsx","components/Project/index.tsx","components/Card/index.tsx","pages/App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","Logo","props","className","src","logo","Header","Heart","heartIcon","alt","Footer","Section","header","children","description","rest","Container","direction","style","flexDirection","SkillTree","React","Children","map","c","listStyle","markIcon","Project","media","links","useState","imgId","setImgId","count","Error","info","m","i","onClick","key","filter","Note","position","right","bottom","noteCorner","App","id","flex","href","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.43e504ba.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.40cc4cd5.svg\";","module.exports = __webpack_public_path__ + \"static/media/heart.bf03c823.svg\";","module.exports = __webpack_public_path__ + \"static/media/mark.da9cd349.svg\";","module.exports = __webpack_public_path__ + \"static/media/note-corner.615c58de.svg\";","import React from \"react\";\nimport \"./Logo.scss\";\nimport logo from \"../../docs/logo.svg\";\n\nconst Logo: React.FC<React.DetailedHTMLProps<React.ImgHTMLAttributes<HTMLImageElement>, HTMLImageElement>> = (\n  props: React.DetailedHTMLProps<React.ImgHTMLAttributes<HTMLImageElement>, HTMLImageElement>\n) => {\n  return <img {...props} className={\"logo \" + props.className || \"\"} src={logo} />;\n};\n\nexport default Logo;\n","import React from \"react\";\nimport Logo from \"../Logo\";\n\nimport \"./Header.scss\";\n\nconst Header: React.FC = () => {\n  return (\n    <header className=\"page-header container\">\n      {/* <a className=\"nav-item\" href=\"#about-me\">\n        Обо мне\n      </a>\n      <a className=\"nav-item\" href=\"#\">\n        Мои проекты\n      </a>\n      <a className=\"nav-item\" href=\"#\">\n        Контакты\n      </a> */}\n      <Logo className=\"nav-logo\" />\n    </header>\n  );\n};\n\nexport default Header;\n","import React from \"react\";\n\nimport \"./Icon.scss\";\n\nimport heartIcon from \"../../docs/heart.svg\";\n\nexport const Heart: React.FC = () => {\n  return <img src={heartIcon} alt=\"heart\" className=\"icon\" />;\n};\n","import React from \"react\";\nimport { Heart } from \"../Icon\";\nimport \"./Footer.scss\";\n\nconst Footer: React.FC = () => {\n  return (\n    <footer className=\"page-footer\">\n      <p className=\"text-thin\">\n        от дане4ки с <Heart />\n      </p>\n    </footer>\n  );\n};\n\nexport default Footer;\n","import React from \"react\";\nimport Logo from \"../Logo\";\n\nimport \"./Section.scss\";\n\nexport interface Props extends React.DetailedHTMLProps<React.HTMLAttributes<HTMLElement>, HTMLElement> {\n  header: string;\n  description?: string;\n}\n\nconst Section: React.FC<React.PropsWithChildren<Props>> = props => {\n  const { header, children, description, ...rest } = props;\n  return (\n    <section {...rest}>\n      <header className=\"paragraph\">\n        <h2 className=\"text-center\">{header}</h2>\n        {children && (\n          <>\n            <hr />\n            <p className=\"text-center d-block\">{description}</p>\n          </>\n        )}\n      </header>\n      {children}\n    </section>\n  );\n};\n\nexport default Section;\n","import React, { ReactPortal, PropsWithChildren } from \"react\";\nimport \"./Container.scss\";\n\ninterface Props extends React.DetailedHTMLProps<React.HTMLAttributes<HTMLDivElement>, HTMLDivElement> {\n  direction?: \"column\" | \"-moz-initial\" | \"inherit\" | \"initial\" | \"revert\" | \"unset\" | \"column-reverse\" | \"row\" | \"row-reverse\";\n}\n\nconst Container: React.FC<PropsWithChildren<Props>> = props => {\n  const { children, direction, ...rest } = props;\n  return (\n    <div {...rest} className=\"container\" style={{ flexDirection: direction }}>\n      {children}\n    </div>\n  );\n};\n\nexport default Container;\n","import React from \"react\";\nimport \"./SkillTree.scss\";\n\nimport markIcon from \"../../docs/mark.svg\";\n\ninterface Props extends React.DetailedHTMLProps<React.HTMLAttributes<HTMLUListElement>, HTMLUListElement> {\n  header: React.ReactChild;\n}\n\nconst SkillTree: React.FC<React.PropsWithChildren<Props>> = props => {\n  const { header, children, ...rest } = props;\n  return (\n    <ul className=\"skilltree\" {...rest}>\n      <h2 className=\"text-bold\">{header}</h2>\n      {React.Children.map(children, c => (\n        <li style={{ listStyle: `url(${markIcon})` }}>{c}</li>\n      ))}\n    </ul>\n  );\n};\n\nexport default SkillTree;\n","import React, { useState } from \"react\";\nimport \"./Project.scss\";\n\ninterface Props {\n  header: string;\n  media: string[];\n\n  links: React.ReactChild[];\n}\n\nconst Project: React.FC<React.PropsWithChildren<Props>> = (props) => {\n  const { media, header, links, children } = props;\n  const [imgId, setImgId] = useState(0);\n\n  const handleMediaSelect = (id: number) => {\n    setImgId(id);\n  }\n\n  if (React.Children.count(children) !== 2) throw new Error(\"required two children components\");\n  const [description, info] = children as React.ReactNode[];\n\n  return (\n    <section className=\"project\">\n      <header className=\"project-header\">\n        <img className=\"project-cover\" src={media[imgId]} />\n        <div className=\"project-media\">{media.map((m, i) => i === imgId && <img onClick={() => handleMediaSelect(i)} src={m} key={m} />).filter(m => m)}</div>\n\n        <h2>{header}</h2>\n      </header>\n      <section className=\"project-content\">\n        <div className=\"project-description\">\n          {description}\n        </div>\n        <aside className=\"project-info\">\n          {info}\n        </aside>\n      </section>\n    </section>\n  );\n}\n\nexport default Project;","import React, { ReactPortal, PropsWithChildren } from \"react\";\nimport \"./Card.scss\";\n\nimport noteCorner from \"../../docs/note-corner.svg\";\n\ninterface NoteProps extends React.DetailedHTMLProps<React.HTMLAttributes<HTMLDivElement>, HTMLDivElement> {}\n\nexport const Note: React.FC<PropsWithChildren<NoteProps>> = props => {\n  const { children, ...rest } = props;\n  return (\n    <div {...rest} className=\"card-note\">\n      {children}\n        <img style={{ position: \"absolute\", right: -7, bottom: -7 }} src={noteCorner} />\n    </div>\n  );\n};\n","import React from \"react\";\n\nimport Header from \"../components/Header\";\nimport Footer from \"../components/Footer\";\nimport Section from \"../components/Section\";\nimport Container from \"../components/Container\";\nimport SkillTree from \"../components/SkillTree\";\nimport Project from \"../components/Project\";\n\nimport \"./App.scss\";\nimport { Note } from \"../components/Card\";\n\nconst App: React.FC = () => {\n  return (\n    <>\n      <Header />\n      <main className=\"responsive\">\n        <Section\n          id=\"about-me\"\n          header=\"Обо мне\"\n          description=\"Добро пожаловать в моё портфолио! Здесь ты можешь узнать, кто я и чем люблю заниматься, а главное - как я могу тебе пригодиться ;)\"\n        >\n          <Container>\n            <Note style={{ flex: 1 }}>Ты читаешь о девятнадцатилетнем студенте-погромисте, который обожает код и всё, что с этим связано</Note>\n            <SkillTree style={{ flex: 1 }} header=\"Что я умею\">\n              <a href=\"#\" className=\"color-text\">\n                <strong className=\"color-primary\">Frontend</strong> на HTML | CSS | JS\n              </a>\n              <a href=\"#\" className=\"color-text\">\n                <strong className=\"color-primary\">Backend</strong> на Node JS\n              </a>\n              <a href=\"#\" className=\"color-text\">\n                <strong className=\"color-primary\">Игры</strong> на C# и Unity\n              </a>\n            </SkillTree>\n          </Container>\n        </Section>\n        <Section id=\"my-projects\" header=\"Мои проекты\" description=\"Здесь ты можешь видеть проекты, в которых я принимал участие, либо же разрабатывал в одиночку\">\n          <Project\n            header=\"Dragon Catch\"\n            links={[]}\n            media={[]}\n          >\n            <>\n              Игра написанная на <strong>Unity</strong> специально для игрового джема Weekly Game Jam\n\n              <button className=\"btn\">Играть</button>\n            </>\n            <>\n              <h3 className=\"text-thin mt-0\"> Технологии создания </h3>\n              <ul>\n                <li> UnityEngine </li>\n                <li> C# </li>\n              </ul>\n            </>\n          </Project>\n        </Section>\n      </main>\n      <Footer />\n    </>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./pages/App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nimport \"./theme.scss\";\n\nReactDOM.render(<App />, document.getElementById(\"app\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}